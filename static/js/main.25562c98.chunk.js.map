{"version":3,"sources":["components/logo/Logo.js","components/footer/Footer.js","config.js","dataLayer/StateProvider.js","components/searchForm/SearchForm.js","components/Statsbar/Statsbar.js","components/SearchResult/SearchResult.js","components/SearchResults/SearchResults.js","App.js","reportWebVitals.js","index.js","dataLayer/Reducer.js"],"names":["Logo","className","aria-hidden","Footer","href","target","rel","settings","prepareWikiUrl","searchText","characters","error","StateContext","createContext","useStateValue","useContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","SearchForm","dispatch","prepareWikiResultArr","searchResults","preparedResultsArr","query","pages","keys","Object","length","key","push","fetchSearchResultsHandler","useCallback","a","type","payload","wikiUrl","fetch","rawResults","json","results","console","log","fetchSearchResults","onSubmit","e","preventDefault","autoComplete","onChange","text","Statsbar","totalResults","SearchResult","result","pageid","title","thumbnail","source","src","alt","extract","SearchResults","isSearchResultsLoading","map","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","state","action","document","getElementById"],"mappings":"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","file":"static/js/main.25562c98.chunk.js","sourcesContent":["import './Logo.css';\n\nexport function Logo(){\n    return (\n        <section className=\"logo-container\">\n          <div className=\"logo\" aria-hidden=\"true\">\n          <span className=\"blue\">Search</span>\n                <span className=\"red\">With</span>\n                <span className=\"yellow\">Jatin</span>\n                <span className=\"green exclaim\">!</span>\n          </div>\n        </section>\n      );\n}","import './Footer.css';\n\nexport function Footer(){\n    return (\n        <footer>\n            <p><span aria-hidden=\"true\">&lt;&lt;</span> Powered by <a href=\"https://www.wikipedia.org\" target=\"_blank\" rel=\"noreferrer\">Wikipedia</a> <span aria-hidden=\"true\">&gt;&gt;</span></p>\n        </footer>\n      );\n}","export const settings = {\n    limit: 20,\n};\n\nexport const prepareWikiUrl = (searchText, characters) => {\n    try {\n        return `https://en.wikipedia.org/w/api.php?action=query&generator=search&gsrsearch=${searchText}&gsrlimit=${settings.limit}&prop=pageimages|extracts&exchars=${characters}&exintro&explaintext&exlimit=max&format=json&origin=*`;\n    } catch (error) {\n        throw error;\n    }\n}","import React, {createContext, useContext, useReducer} from \"react\";\n\n//creating the context...\nexport const StateContext = createContext();\n\n// Pull information from the data layer\nexport const useStateValue = () => useContext(StateContext);\n\n// Wrap our app and provide the Data layer\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n      {children}\n    </StateContext.Provider>\n  );","import React, { useCallback } from 'react';\nimport { FaSistrix } from 'react-icons/fa';\n\nimport './SearchForm.css';\nimport { prepareWikiUrl } from '../../config';\nimport { useStateValue } from '../../dataLayer/StateProvider';\n\n\nexport const SearchForm = () => {\n    const [{ searchText }, dispatch] = useStateValue();\n\n    /**\n     * Function to set the search text in input variable\n     * Jatin Seth\n     */\n    const setSearchText = (text) => {\n        // dispatch the item into the data layer\n        dispatch({\n            type: \"SEARCH_SET_SEARCH_TEXT\",\n            payload: {\n                value: text,\n            }\n        });\n    };\n\n    /**\n     * Function to convert the WIKI reaults to array in required format\n     * Jatin Seth\n     */\n    const prepareWikiResultArr = (searchResults) => {\n        try {\n            const preparedResultsArr = [];\n            // checking if the key is there\n            if (searchResults?.query?.pages && typeof searchResults.query.pages === 'object') {\n                const keys = Object.keys(searchResults.query.pages);\n\n                // if we got results or not...\n                if (keys.length > 0) {\n                    for (const key of keys) {\n                        preparedResultsArr.push(searchResults.query.pages[key]);\n                    }//EOL\n                }//EOI\n            }//EOI\n            return preparedResultsArr;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    const fetchSearchResultsHandler = useCallback(() => {\n        //definations\n        const fetchSearchResults = async () => {\n            try {\n                //loading ON\n                dispatch({\n                    type: \"SEARCH_SET_SEARCH_LOADING\",\n                    payload: {\n                        value: true,\n                    }\n                });\n\n                // call the wikipedia API and fetch results\n                const wikiUrl = prepareWikiUrl(searchText, 100);\n                // call the API\n                const rawResults = await fetch(wikiUrl);\n                const results = await rawResults.json();\n                // caling the parent function\n                dispatch({\n                    type: \"SEARCH_SET_SEARCH_DATA\",\n                    payload: {\n                        value: prepareWikiResultArr(results),\n                    }\n                });\n\n                //loading OFFF\n                dispatch({\n                    type: \"SEARCH_SET_SEARCH_LOADING\",\n                    payload: {\n                        value: false,\n                    }\n                });\n            } catch (error) {\n                //loading OFFF\n                dispatch({\n                    type: \"SEARCH_SET_SEARCH_LOADING\",\n                    payload: {\n                        value: false,\n                    }\n                });\n                console.log(error);\n            }\n        }//EOF\n\n        // call the function to fetch results\n        fetchSearchResults();\n    }, [searchText, dispatch]);\n\n    console.log('SearchForm rendered');\n\n    return (\n        <section className=\"search-bar-container\">\n            <form className=\"form\" onSubmit={(e) => { e.preventDefault(); fetchSearchResultsHandler(); }}>\n                <input type=\"text\" autoComplete=\"off\" className=\"search-bar\" value={searchText} onChange={(e) => { setSearchText(e.target.value); }\n                } />\n                <button type=\"submit\" className=\"search-button\">\n                    <i className=\"blue pointer\"><FaSistrix /></i>\n                </button>\n            </form>\n        </section>\n    );\n}","import './Statsbar.css';\n\n\nexport const Statsbar = ({ totalResults }) => {\n    return (\n        <div className=\"stats-bar-container\">\n            <span>Displaying <strong>{totalResults}</strong> results.</span>\n        </div>\n    );\n}","import './SearchResult.css';\n\n\nexport const SearchResult = ({result}) => {\n    return (\n        <div className=\"search-results-item\" key={result.pageid}>\n            <div className=\"search-results-title\">\n                <a href={`https://en.wikipedia.org/?curid=${result.pageid}`} target=\"_blank\" rel=\"noreferrer\">{result.title}</a>\n            </div>\n            <div className=\"search-results-content\">\n                {\n                    (result?.thumbnail?.source) &&\n                        (\n                            <div className=\"search-results-image\">\n                                <img src={result.thumbnail.source} alt={result.title} />\n                            </div>\n                        )\n                }\n                <div className=\"search-results-text\">\n                    {result.extract}\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\n\nimport './SearchResults.css';\nimport { Statsbar } from '../Statsbar/Statsbar';\nimport { SearchResult } from '../SearchResult/SearchResult';\nimport { useStateValue } from '../../dataLayer/StateProvider';\n\n\nexport const SearchResults = () => {\n    const [{ searchResults, isSearchResultsLoading }] = useStateValue();\n    console.log('SearchResults rendered');\n\n    return (\n        <section className=\"search-results-container\">\n            {\n                isSearchResultsLoading\n                    ? (<span>loading...</span>)\n                    : (<>\n                        <Statsbar totalResults={searchResults.length} />\n                        {\n                            (searchResults.length > 0) &&\n                            searchResults.map((result, index) => {\n                                return (\n                                    <SearchResult key={index} result={result} />\n                                )\n                            })\n                        }\n                    </>)\n            }\n        </section>\n    );\n};","import React from 'react';\n\nimport './App.css';\nimport { Logo } from './components/logo/Logo';\nimport { Footer } from './components/footer/Footer';\nimport { SearchForm } from './components/searchForm/SearchForm';\nimport { SearchResults as SearchResultsComp } from './components/SearchResults/SearchResults';\n\nfunction App() {\n\n    return (\n        <main>\n            <Logo />\n            <SearchForm />\n            <SearchResultsComp />\n            <Footer />\n        </main>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {initialState, reducer} from \"./dataLayer/Reducer\";\nimport {StateProvider} from \"./dataLayer/StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider reducer={reducer} initialState={initialState}>\n        <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const initialState = {\n    searchText: '',\n    searchResults: [],\n    isSearchResultsLoading: false\n};\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case 'SEARCH_SET_SEARCH_TEXT':\n            return {\n                ...state,\n                searchText: action.payload.value\n            };\n        case 'SEARCH_SET_SEARCH_LOADING':\n            return {\n                ...state,\n                isSearchResultsLoading: action.payload.value\n            }\n        case 'SEARCH_SET_SEARCH_DATA':\n            return {\n                ...state,\n                searchResults: action.payload.value\n            }\n        default:\n            return state;\n    }\n};"],"sourceRoot":""}